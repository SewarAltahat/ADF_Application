package arc.model.ro;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.HashMap;

import oracle.jbo.RowSet;
import oracle.jbo.server.ProgrammaticViewRowImpl;
import oracle.jbo.server.ViewAttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 17 15:47:03 AST 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ArcClassificationPVORowImpl
  extends ProgrammaticViewRowImpl
{
  /**
   * createRowData - for custom java data source support.
   * Overridden to initialize the dataProvier for newly created row.
   * Used for updateable View Objects.
   */
  public Object createRowData(HashMap attrNameValueMap)
  {
    Object value = super.createRowData(attrNameValueMap);
    return value;
  }

  /**
   * convertToSourceType - for custom java data source support.
   * Overridden to provide custom implementation for conversions of a value
   * from attribute java type to datasource column/field type.
   * Not required in most cases.
   */
  public Object convertToSourceType(ViewAttributeDefImpl attrDef, String sourceType, Object val)
  {
    Object value = super.convertToSourceType(attrDef, sourceType, val);
    return value;
  }

  /**
   * convertToAttributeType - for custom java data source support.
   * Overridden to provide custom implementation for conversions of a value
   *  from datasource/column field type to attribute java type.
   * Not required in most cases.
   */
  public Object convertToAttributeType(ViewAttributeDefImpl attrDef, Class javaTypeClass, Object val)
  {
    Object value = super.convertToAttributeType(attrDef, javaTypeClass, val);
    return value;
  }

  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
  protected enum AttributesEnum
  {
    StartPage,
    EndPage,
    RowUpdateFl,
    DisplayDocumentSubject,
    DocReceiveDate,
    DocumentTypeFk,
    DisplayDocumentTypeFk,
    DocumentSecurityFk,
    DisplayDocumentSecurityFk,
    DocumentNumber,
    DocumentTypeFkSearch,
    DisplayDocumentTypeFkSearch,
    DocumentSecurityFkSearch,
    DisplayDocumentSecurityFkSearch,
    EmployeesFk,
    DisplayEmployeesFk,
    DocumentAttachTypeFk,
    DisplayDocumentAttachTypeFk,
    FileLocation,
    DisplayFileLocation,
    SsoActiveLookupValuesDocumentTypeFk,
    SsoActiveLookupValuesDocumentSecurityFk,
    HcmEmployeesRVO,
    SsoActiveLookupValuesDocumentAttachTypeFk;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

    protected int index()
    {
      return AttributesEnum.firstIndex() + ordinal();
    }

    protected static final int firstIndex()
    {
      return firstIndex;
    }

    protected static int count()
    {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    protected static final AttributesEnum[] staticValues()
    {
      if (vals == null)
      {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }


  public static final int STARTPAGE = AttributesEnum.StartPage.index();
  public static final int ENDPAGE = AttributesEnum.EndPage.index();
  public static final int ROWUPDATEFL = AttributesEnum.RowUpdateFl.index();
  public static final int DISPLAYDOCUMENTSUBJECT = AttributesEnum.DisplayDocumentSubject.index();
  public static final int DOCRECEIVEDATE = AttributesEnum.DocReceiveDate.index();
  public static final int DOCUMENTTYPEFK = AttributesEnum.DocumentTypeFk.index();
  public static final int DISPLAYDOCUMENTTYPEFK = AttributesEnum.DisplayDocumentTypeFk.index();
  public static final int DOCUMENTSECURITYFK = AttributesEnum.DocumentSecurityFk.index();
  public static final int DISPLAYDOCUMENTSECURITYFK = AttributesEnum.DisplayDocumentSecurityFk.index();
  public static final int DOCUMENTNUMBER = AttributesEnum.DocumentNumber.index();
  public static final int DOCUMENTTYPEFKSEARCH = AttributesEnum.DocumentTypeFkSearch.index();
  public static final int DISPLAYDOCUMENTTYPEFKSEARCH = AttributesEnum.DisplayDocumentTypeFkSearch.index();
  public static final int DOCUMENTSECURITYFKSEARCH = AttributesEnum.DocumentSecurityFkSearch.index();
  public static final int DISPLAYDOCUMENTSECURITYFKSEARCH = AttributesEnum.DisplayDocumentSecurityFkSearch.index();
  public static final int EMPLOYEESFK = AttributesEnum.EmployeesFk.index();
  public static final int DISPLAYEMPLOYEESFK = AttributesEnum.DisplayEmployeesFk.index();
  public static final int DOCUMENTATTACHTYPEFK = AttributesEnum.DocumentAttachTypeFk.index();
  public static final int DISPLAYDOCUMENTATTACHTYPEFK = AttributesEnum.DisplayDocumentAttachTypeFk.index();
  public static final int FILELOCATION = AttributesEnum.FileLocation.index();
  public static final int DISPLAYFILELOCATION = AttributesEnum.DisplayFileLocation.index();
  public static final int SSOACTIVELOOKUPVALUESDOCUMENTTYPEFK =
    AttributesEnum.SsoActiveLookupValuesDocumentTypeFk.index();
  public static final int SSOACTIVELOOKUPVALUESDOCUMENTSECURITYFK =
    AttributesEnum.SsoActiveLookupValuesDocumentSecurityFk.index();
  public static final int HCMEMPLOYEESRVO = AttributesEnum.HcmEmployeesRVO.index();
  public static final int SSOACTIVELOOKUPVALUESDOCUMENTATTACHTYPEFK =
    AttributesEnum.SsoActiveLookupValuesDocumentAttachTypeFk.index();

  /**
   * This is the default constructor (do not remove).
   */
  public ArcClassificationPVORowImpl()
  {
  }

  /**
   * Gets the attribute value for the calculated attribute StartPage.
   * @return the StartPage
   */
  public BigDecimal getStartPage()
  {
    return (BigDecimal) getAttributeInternal(STARTPAGE);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute StartPage.
   * @param value value to set the  StartPage
   */
  public void setStartPage(BigDecimal value)
  {
    setAttributeInternal(STARTPAGE, value);
  }

  /**
   * Gets the attribute value for the calculated attribute EndPage.
   * @return the EndPage
   */
  public BigDecimal getEndPage()
  {
    return (BigDecimal) getAttributeInternal(ENDPAGE);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute EndPage.
   * @param value value to set the  EndPage
   */
  public void setEndPage(BigDecimal value)
  {
    setAttributeInternal(ENDPAGE, value);
  }


  /**
   * Gets the attribute value for the calculated attribute RowUpdateFl.
   * @return the RowUpdateFl
   */
  public BigDecimal getRowUpdateFl()
  {
    return (BigDecimal) getAttributeInternal(ROWUPDATEFL);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute RowUpdateFl.
   * @param value value to set the  RowUpdateFl
   */
  public void setRowUpdateFl(BigDecimal value)
  {
    setAttributeInternal(ROWUPDATEFL, value);
  }


  /**
   * Gets the attribute value for the calculated attribute DisplayDocumentDescription.
   * @return the DisplayDocumentDescription
   */
  public String getDisplayDocumentSubject()
  {
    return (String) getAttributeInternal(DISPLAYDOCUMENTSUBJECT);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DisplayDocumentDescription.
   * @param value value to set the  DisplayDocumentDescription
   */
  public void setDisplayDocumentSubject(String value)
  {
    setAttributeInternal(DISPLAYDOCUMENTSUBJECT, value);
  }

  /**
   * Gets the attribute value for the calculated attribute DocReceiveDate.
   * @return the DocReceiveDate
   */
  public Timestamp getDocReceiveDate()
  {
    return (Timestamp) getAttributeInternal(DOCRECEIVEDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DocReceiveDate.
   * @param value value to set the  DocReceiveDate
   */
  public void setDocReceiveDate(Timestamp value)
  {
    setAttributeInternal(DOCRECEIVEDATE, value);
  }

  /**
   * Gets the attribute value for the calculated attribute DocumentTypeFk.
   * @return the DocumentTypeFk
   */
  public BigDecimal getDocumentTypeFk()
  {
    return (BigDecimal) getAttributeInternal(DOCUMENTTYPEFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DocumentTypeFk.
   * @param value value to set the  DocumentTypeFk
   */
  public void setDocumentTypeFk(BigDecimal value)
  {
    setAttributeInternal(DOCUMENTTYPEFK, value);
  }

  /**
   * Gets the attribute value for the calculated attribute DisplayDocumentTypeFk.
   * @return the DisplayDocumentTypeFk
   */
  public String getDisplayDocumentTypeFk()
  {
    return (String) getAttributeInternal(DISPLAYDOCUMENTTYPEFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DisplayDocumentTypeFk.
   * @param value value to set the  DisplayDocumentTypeFk
   */
  public void setDisplayDocumentTypeFk(String value)
  {
    setAttributeInternal(DISPLAYDOCUMENTTYPEFK, value);
  }

  /**
   * Gets the attribute value for the calculated attribute DocumentSecurityFk.
   * @return the DocumentSecurityFk
   */
  public BigDecimal getDocumentSecurityFk()
  {
    return (BigDecimal) getAttributeInternal(DOCUMENTSECURITYFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DocumentSecurityFk.
   * @param value value to set the  DocumentSecurityFk
   */
  public void setDocumentSecurityFk(BigDecimal value)
  {
    setAttributeInternal(DOCUMENTSECURITYFK, value);
  }

  /**
   * Gets the attribute value for the calculated attribute DisplayDocumentSecurityFk.
   * @return the DisplayDocumentSecurityFk
   */
  public String getDisplayDocumentSecurityFk()
  {
    return (String) getAttributeInternal(DISPLAYDOCUMENTSECURITYFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DisplayDocumentSecurityFk.
   * @param value value to set the  DisplayDocumentSecurityFk
   */
  public void setDisplayDocumentSecurityFk(String value)
  {
    setAttributeInternal(DISPLAYDOCUMENTSECURITYFK, value);
  }

  /**
   * Gets the attribute value for the calculated attribute DocumentNumber.
   * @return the DocumentNumber
   */
  public String getDocumentNumber()
  {
    return (String) getAttributeInternal(DOCUMENTNUMBER);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DocumentNumber.
   * @param value value to set the  DocumentNumber
   */
  public void setDocumentNumber(String value)
  {
    setAttributeInternal(DOCUMENTNUMBER, value);
  }

  /**
   * Gets the attribute value for the calculated attribute DocumentTypeFkSearch.
   * @return the DocumentTypeFkSearch
   */
  public BigDecimal getDocumentTypeFkSearch()
  {
    return (BigDecimal) getAttributeInternal(DOCUMENTTYPEFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DocumentTypeFkSearch.
   * @param value value to set the  DocumentTypeFkSearch
   */
  public void setDocumentTypeFkSearch(BigDecimal value)
  {
    setAttributeInternal(DOCUMENTTYPEFKSEARCH, value);
  }

  /**
   * Gets the attribute value for the calculated attribute DisplayDocumentTypeFkSearch.
   * @return the DisplayDocumentTypeFkSearch
   */
  public String getDisplayDocumentTypeFkSearch()
  {
    return (String) getAttributeInternal(DISPLAYDOCUMENTTYPEFK);
  }

  /**
   * Gets the attribute value for the calculated attribute DocumentSecurityFkSearch.
   * @return the DocumentSecurityFkSearch
   */
  public BigDecimal getDocumentSecurityFkSearch()
  {
    return (BigDecimal) getAttributeInternal(DOCUMENTSECURITYFK);
  }

  /**
   * Gets the attribute value for the calculated attribute DisplayDocumentSecurityFkSearch.
   * @return the DisplayDocumentSecurityFkSearch
   */
  public String getDisplayDocumentSecurityFkSearch()
  {
    return (String) getAttributeInternal(DISPLAYDOCUMENTSECURITYFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DisplayDocumentSecurityFkSearch.
   * @param value value to set the  DisplayDocumentSecurityFkSearch
   */
  public void setDisplayDocumentSecurityFkSearch(String value)
  {
    setAttributeInternal(DISPLAYDOCUMENTSECURITYFKSEARCH, value);
  }


  /**
   * Gets the attribute value for the calculated attribute EmployeesFk.
   * @return the EmployeesFk
   */
  public BigDecimal getEmployeesFk()
  {
    return (BigDecimal) getAttributeInternal(EMPLOYEESFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute EmployeesFk.
   * @param value value to set the  EmployeesFk
   */
  public void setEmployeesFk(BigDecimal value)
  {
    setAttributeInternal(EMPLOYEESFK, value);
  }

  /**
   * Gets the attribute value for the calculated attribute DisplayEmployeesFk.
   * @return the DisplayEmployeesFk
   */
  public String getDisplayEmployeesFk()
  {
    return (String) getAttributeInternal(DISPLAYEMPLOYEESFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DisplayEmployeesFk.
   * @param value value to set the  DisplayEmployeesFk
   */
  public void setDisplayEmployeesFk(String value)
  {
    setAttributeInternal(DISPLAYEMPLOYEESFK, value);
  }

  /**
   * Gets the attribute value for the calculated attribute DocumentAttachTypeFk.
   * @return the DocumentAttachTypeFk
   */
  public BigDecimal getDocumentAttachTypeFk()
  {
    return (BigDecimal) getAttributeInternal(DOCUMENTATTACHTYPEFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DocumentAttachTypeFk.
   * @param value value to set the  DocumentAttachTypeFk
   */
  public void setDocumentAttachTypeFk(BigDecimal value)
  {
    setAttributeInternal(DOCUMENTATTACHTYPEFK, value);
  }

  /**
   * Gets the attribute value for the calculated attribute DisplayDocumentAttachTypeFk.
   * @return the DisplayDocumentAttachTypeFk
   */
  public String getDisplayDocumentAttachTypeFk()
  {
    return (String) getAttributeInternal(DISPLAYDOCUMENTATTACHTYPEFK);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DisplayDocumentAttachTypeFk.
   * @param value value to set the  DisplayDocumentAttachTypeFk
   */
  public void setDisplayDocumentAttachTypeFk(String value)
  {
    setAttributeInternal(DISPLAYDOCUMENTATTACHTYPEFK, value);
  }

  /**
   * Gets the attribute value for the calculated attribute FileLocation.
   * @return the FileLocation
   */
  public BigDecimal getFileLocation()
  {
    return (BigDecimal) getAttributeInternal(FILELOCATION);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute FileLocation.
   * @param value value to set the  FileLocation
   */
  public void setFileLocation(BigDecimal value)
  {
    setAttributeInternal(FILELOCATION, value);
  }

  /**
   * Gets the attribute value for the calculated attribute DisplayFileLocation.
   * @return the DisplayFileLocation
   */
  public String getDisplayFileLocation()
  {
    return (String) getAttributeInternal(DISPLAYFILELOCATION);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute DisplayFileLocation.
   * @param value value to set the  DisplayFileLocation
   */
  public void setDisplayFileLocation(String value)
  {
    setAttributeInternal(DISPLAYFILELOCATION, value);
  }

  /**
   * Gets the view accessor <code>RowSet</code> SsoActiveLookupValuesDocumentTypeFk.
   */
  public RowSet getSsoActiveLookupValuesDocumentTypeFk()
  {
    return (RowSet) getAttributeInternal(SSOACTIVELOOKUPVALUESDOCUMENTTYPEFK);
  }

  /**
   * Gets the view accessor <code>RowSet</code> SsoActiveLookupValuesDocumentSecurityFk.
   */
  public RowSet getSsoActiveLookupValuesDocumentSecurityFk()
  {
    return (RowSet) getAttributeInternal(SSOACTIVELOOKUPVALUESDOCUMENTSECURITYFK);
  }

  /**
   * Gets the view accessor <code>RowSet</code> HcmEmployeesRVO.
   */
  public RowSet getHcmEmployeesRVO()
  {
    return (RowSet) getAttributeInternal(HCMEMPLOYEESRVO);
  }

  /**
   * Gets the view accessor <code>RowSet</code> SsoActiveLookupValuesDocumentAttachTypeFk.
   */
  public RowSet getSsoActiveLookupValuesDocumentAttachTypeFk()
  {
    return (RowSet) getAttributeInternal(SSOACTIVELOOKUPVALUESDOCUMENTATTACHTYPEFK);
  }
}

